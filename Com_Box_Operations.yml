# Button Actions
binary_sensor: 
  - id: !extend button_A
    on_multi_click:
    - timing:
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at least 0.2s
    then:
        - homeassistant.service:
            service: script.coms_tone
        - homeassistant.service:
            service: script.coms_lights_off
    - timing:
        - ON for at least 1.5s
    then:
        - homeassistant.service:
            service: script.coms_tone
        - homeassistant.service:
            service: script.coms_lights_on
    - timing:
        - ON for at most 1s
        - OFF for at least 0.5s
    then:
        - homeassistant.service:
            service: script.coms_tone
        - homeassistant.service:
            service: script.coms_lights_complete
        - if:
            condition: lvgl.is_paused
            then:
            - lvgl.resume:
            - lvgl.widget.redraw:

- id: !extend button_B
  on_multi_click:
  - timing:
      - ON for at most 1s
      - OFF for at most 1s
      - ON for at most 1s
      - OFF for at least 0.2s
    then:
    - homeassistant.service:
        service: script.coms_tone
  - timing:
      - ON for at least 1.5s
    then:
    - homeassistant.service:
        service: script.coms_tone
  - timing:
      - ON for at most 1s
      - OFF for at least 0.5s
    then:
    - homeassistant.service:
        service: script.coms_tone

  - id: !extend button_C
    on_multi_click:
    - timing:
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at least 0.2s
      then:
        - homeassistant.service:
            service: script.coms_tone
    - timing:
        - ON for at least 1.5s
      then:
        - homeassistant.service:
            service: script.coms_tone
        - wait_until:
            media_player.is_idle: media_out
        - voice_assistant.start:
    - timing:
          - ON for at most 1s
          - OFF for at least 0.5s
      then:
        - if:
            all:
              - voice_assistant.is_running: 
            then:
              - voice_assistant.stop:
            else:
              - voice_assistant.start:
                    
# Screen
lvgl:
  disp_bg_color: 0x000000
  style_definitions:
    - id: goldstyle
      bg_color: 0x00000
      shadow_opa: TRANSP
      bg_opa: COVER
      border_opa: COVER
      radius: 0
      pad_all: 0
      pad_row: 0
      pad_column: 0
      border_color: 0x000000
      text_color: 0x0091ff
      width: 100%
      height: 30
      align: CENTER
  pages:
      - id: main_page
        bg_color: 0x000000
        shadow_opa: TRANSP

switch:
    - platform: template
      name: Antiburn
      id: switch_antiburn
      icon: mdi:television-shimmer
      optimistic: true
      entity_category: "config"
      turn_on_action:
        - logger.log: "Starting Antiburn"
        - if:
            condition: lvgl.is_paused
            then:
                - lvgl.resume:
                - lvgl.widget.redraw:
        - lvgl.pause:
            show_snow: true
      turn_off_action:
        - logger.log: "Stopping Antiburn"
        - if:
            condition: lvgl.is_paused
            then:
                - lvgl.resume:
                - lvgl.widget.redraw:

time:
  - platform: homeassistant
    id: time_comp
    on_time:
      - hours: 2,3,4,5
        minutes: 5
        seconds: 0
        then:
          - switch.turn_on: switch_antiburn
      - hours: 2,3,4,5
        minutes: 35
        seconds: 0
        then:
          - switch.turn_off: switch_antiburn

# State Machine and Timekeeping          
interval:
  - interval: .2s
    then:
      - if:
          condition: 
            - speaker.is_playing:
                id: speaker_primary
          then:
            - light.turn_on:
                id: LEDDISPLAY
                brightness: 70%
                effect: Jumble_Rainbow
            - delay: .4s
            - light.turn_on:
                id: LEDDISPLAY
                brightness: 0%
                effect: none
            - delay: .3s
      - if:
          condition:
            all:
              - switch.is_off: ducking
              - switch.is_off: Mute_On
              - not:
                - speaker.is_playing:
                    id: speaker_primary
          then:
            - number.increment: indicator_clock

number:
  - platform: template
    internal: True
    id: indicator_clock
    optimistic: True
    min_value: 0
    max_value: 100
    step: 1
    on_value_range:
    - above: 0
      below: 2
      then:
        - if:
            condition:
              - not:
                  - any:
                    - switch.is_on: Rain_Later
                    - switch.is_on: Air_Bad
                    - switch.is_on: Texted_On
                    - switch.is_on: Feeder_Out
            then:
              - light.turn_on:
                  id: LEDDISPLAY
                  brightness: 0
                  effect: none
              - light.turn_off: 
                  id: LEDDISPLAY
                  transition_length: 0s
    - above: 2
      below: 20
      then:
        - if:
            all:
              - switch.is_on: Rain_Later
            then:
              - light.turn_on:
                  id: LEDDISPLAY
                  brightness: 0%
                  effect: none
              - delay: .3s
              - light.turn_on:
                  id: LEDDISPLAY
                  brightness: 70%
                  red: 0%
                  green: 0%
                  blue: 100%
                  effect: Warp_Core
            else: 
              - number.set:
                  id: indicator_clock
                  value: 21
    - above: 21
      below: 40
      then:
        - if:
            all:
              - switch.is_on: Air_Bad
            then:
              - light.turn_on:
                  id: LEDDISPLAY
                  brightness: 0%
                  effect: none
              - delay: .3s
              - light.turn_on:
                  id: LEDDISPLAY
                  brightness: 70%
                  red: 100%
                  green: 0%
                  blue: 0%
                  effect: Blip_Pulse
            else: 
              - number.set:
                  id: indicator_clock
                  value: 41

    - above: 41
      below: 60
      then:
        - if:
            all:
              - switch.is_on: Texted_On
            then:
              - light.turn_on:
                  id: LEDDISPLAY
                  brightness: 0%
                  effect: none
              - delay: .3s
              - light.turn_on: 
                  id: LEDDISPLAY
                  brightness: 70%
                  red: 100%
                  green: 0%
                  blue: 100%
                  effect: Blop_Pulse
            else: 
              - number.set:
                  id: indicator_clock
                  value: 61

    - above: 61
      below: 80
      then:
        - if:
            all:
              - switch.is_on: Feeder_Out
            then:
              - light.turn_on:
                  id: LEDDISPLAY
                  brightness: 0%
                  effect: none
              - delay: .3s
              - light.turn_on: 
                  id: LEDDISPLAY
                  brightness: 70%
                  red: 0%
                  green: 75%
                  blue: 58%
                  effect: none
            else: 
              - number.set:
                  id: indicator_clock
                  value: 81

    - above: 81
      then:
        - number.set:
            id: indicator_clock
            value: 0

# Voice Control
voice_assistant:
  id: va
  microphone: 'mic'
  media_player: media_out
  noise_suppression_level: 4
  auto_gain: 31dBFS
  volume_multiplier: 4.0
  use_wake_word: false
  on_listening:
      - switch.turn_on: Com_Light
  on_end:
    then:
      - switch.turn_off: Com_Light
      - light.turn_on:
          id: LEDDISPLAY
          brightness: 70%
          effect: Jumble_Rainbow
  on_timer_finished:
    then:
      - homeassistant.service:
          service: script.coms_alert

# Light Effects
light: 
  - id: !extend LEDDISPLAY
    effects: 
      - addressable_lambda:
          name: "Warp_Core"
          update_interval: 40ms
          lambda: |-
            static int x = 0;
            static int z = 0;
            static int spread_compression = 4;
            static float bright_min = .2;
            static float bright_max = .9;
            static float bright_average = (bright_max + bright_min)/2;
            static float bright_deviation = (bright_max - bright_min)/2;
            static int buffer_R = 0;
            static int buffer_G = 0;
            static int buffer_B = 0;

            for (z = 0; z < it.size(); ++z){
              buffer_R = int((bright_average * current_color[0]) + (current_color[0] * bright_deviation * id(baked_SIN_trunc)[(x + (z * spread_compression)) % 20]));
              buffer_G = int((bright_average * current_color[1]) + (current_color[1] * bright_deviation * id(baked_SIN_trunc)[(x + (z * spread_compression)) % 20]));
              buffer_B = int((bright_average * current_color[2]) + (current_color[2] * bright_deviation * id(baked_SIN_trunc)[(x + (z * spread_compression)) % 20]));
              it[z] = Color(buffer_R, buffer_G, buffer_B);
            }

            ++x;   
      - addressable_twinkle:
          name: "Jumble_Mono"
          twinkle_probability: 20%
          progress_interval: 8ms
      - addressable_random_twinkle:
          name: "Jumble_Rainbow"
          twinkle_probability: 10%
          progress_interval: 8ms
      - addressable_flicker:
          name: "Jumble_Fast"
          update_interval: 100ms
          intensity: 80%
      - pulse:
          name: "Blip_Pulse"
          transition_length:
            on_length: .4s
            off_length: .2s
          update_interval: 0.6s
          min_brightness: 30%
          max_brightness: 60%
      - pulse:
          name: "Blop_Pulse"
          transition_length:
            on_length: .1s
            off_length: .4s
          update_interval: 0.5s
          min_brightness: 20%
          max_brightness: 60%



